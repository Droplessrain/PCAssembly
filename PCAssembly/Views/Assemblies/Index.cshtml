@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<PCAssembly.Assembly>

@{
    ViewData["Title"] = "Index";
    string currentSortColumn = ViewBag.CurrentSortColumn as string ?? "AssemblyName";
    string currentSortDirection = ViewBag.CurrentSortDirection as string ?? "asc";
    string newDirection = currentSortDirection == "asc" ? "desc" : "asc";
}

<h1>Index</h1>

<p>
    <a asp-controller="Admin" asp-action="Index" class="btn btn-secondary">Back to Admin Panel</a>
</p>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortColumn="AssemblyName" asp-route-sortDirection="@(currentSortColumn == "AssemblyName" && currentSortDirection == "asc" ? "desc" : "asc")" asp-route-page="@Model.PageNumber">
                    Название
                    @if (currentSortColumn == "AssemblyName")
                    {
                            <span>@(currentSortDirection == "asc" ? "▲" : "▼")</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortColumn="Avgrating" asp-route-sortDirection="@(currentSortColumn == "Avgrating" && currentSortDirection == "asc" ? "desc" : "asc")" asp-route-page="@Model.PageNumber">
                    Рейтинг
                    @if (currentSortColumn == "Avgrating")
                    {
                            <span>@(currentSortDirection == "asc" ? "▲" : "▼")</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortColumn="User" asp-route-sortDirection="@(currentSortColumn == "User" && currentSortDirection == "asc" ? "desc" : "asc")" asp-route-page="@Model.PageNumber">
                    Пользователь
                    @if (currentSortColumn == "User")
                    {
                            <span>@(currentSortDirection == "asc" ? "▲" : "▼")</span>
                    }
                </a>
            </th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.AssemblyName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Avgrating)</td>
                    <td>@Html.DisplayFor(modelItem => item.User.UserName)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.AssemblyId" class="btn btn-warning btn-sm">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.AssemblyId" class="btn btn-info btn-sm">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.AssemblyId" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
        }
    </tbody>
</table>

<div class="pagination justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortColumn = currentSortColumn, sortDirection = currentSortDirection }),
                new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            MaximumPageNumbersToDisplay = 5,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            PreviousElementClass = "page-item",
            NextElementClass = "page-item",
            ActiveLiElementClass = "active"
        })
</div>
